// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddFibbingItAnswer(ctx context.Context, arg AddFibbingItAnswerParams) (FibbingItAnswer, error)
	AddFibbingItRole(ctx context.Context, arg AddFibbingItRoleParams) (FibbingItPlayerRole, error)
	AddFibbingItRound(ctx context.Context, arg AddFibbingItRoundParams) (FibbingItRound, error)
	AddFibbingItScore(ctx context.Context, arg AddFibbingItScoreParams) (FibbingItScore, error)
	AddGameState(ctx context.Context, arg AddGameStateParams) (GameState, error)
	AddPlayer(ctx context.Context, arg AddPlayerParams) (Player, error)
	AddQuestion(ctx context.Context, arg AddQuestionParams) (Question, error)
	AddQuestionTranslation(ctx context.Context, arg AddQuestionTranslationParams) (QuestionsI18n, error)
	AddRoom(ctx context.Context, arg AddRoomParams) (Room, error)
	AddRoomPlayer(ctx context.Context, arg AddRoomPlayerParams) (RoomsPlayer, error)
	GetAllPlayerAnswerIsReady(ctx context.Context, playerID uuid.UUID) (bool, error)
	GetAllPlayerByRoomCode(ctx context.Context, roomCode string) ([]GetAllPlayerByRoomCodeRow, error)
	GetAllPlayersByGameStateID(ctx context.Context, id uuid.UUID) ([]GetAllPlayersByGameStateIDRow, error)
	GetAllPlayersInRoom(ctx context.Context, playerID uuid.UUID) ([]GetAllPlayersInRoomRow, error)
	GetAllPlayersVotingIsReady(ctx context.Context, playerID uuid.UUID) (bool, error)
	GetAllVotesForRoundByGameStateID(ctx context.Context, gameStateID uuid.UUID) ([]GetAllVotesForRoundByGameStateIDRow, error)
	GetCurrentQuestionByPlayerID(ctx context.Context, id uuid.UUID) (GetCurrentQuestionByPlayerIDRow, error)
	GetGameState(ctx context.Context, id uuid.UUID) (GameState, error)
	GetGameStateByPlayerID(ctx context.Context, playerID uuid.UUID) (GameState, error)
	GetGroups(ctx context.Context) ([]QuestionsGroup, error)
	GetLatestRoundByGameStateID(ctx context.Context, id uuid.UUID) (GetLatestRoundByGameStateIDRow, error)
	GetLatestRoundByPlayerID(ctx context.Context, playerID uuid.UUID) (GetLatestRoundByPlayerIDRow, error)
	GetPlayerByID(ctx context.Context, id uuid.UUID) (Player, error)
	GetQuestions(ctx context.Context, arg GetQuestionsParams) ([]GetQuestionsRow, error)
	GetRandomQuestionByRound(ctx context.Context, arg GetRandomQuestionByRoundParams) ([]GetRandomQuestionByRoundRow, error)
	GetRandomQuestionInGroup(ctx context.Context, arg GetRandomQuestionInGroupParams) ([]GetRandomQuestionInGroupRow, error)
	GetRoomByCode(ctx context.Context, roomCode string) (Room, error)
	GetRoomByPlayerID(ctx context.Context, playerID uuid.UUID) (Room, error)
	GetTotalScoresByGameStateID(ctx context.Context, arg GetTotalScoresByGameStateIDParams) ([]GetTotalScoresByGameStateIDRow, error)
	GetVotingState(ctx context.Context, id uuid.UUID) ([]GetVotingStateRow, error)
	RemovePlayerFromRoom(ctx context.Context, playerID uuid.UUID) (RoomsPlayer, error)
	ToggleAnswerIsReady(ctx context.Context, playerID uuid.UUID) (FibbingItAnswer, error)
	TogglePlayerIsReady(ctx context.Context, id uuid.UUID) (Player, error)
	ToggleVotingIsReady(ctx context.Context, playerID uuid.UUID) (FibbingItVote, error)
	UpdateAvatar(ctx context.Context, arg UpdateAvatarParams) (Player, error)
	UpdateGameState(ctx context.Context, arg UpdateGameStateParams) (GameState, error)
	UpdateLocale(ctx context.Context, arg UpdateLocaleParams) (Player, error)
	UpdateNickname(ctx context.Context, arg UpdateNicknameParams) (Player, error)
	UpdateRoomState(ctx context.Context, arg UpdateRoomStateParams) (Room, error)
	UpsertFibbingItVote(ctx context.Context, arg UpsertFibbingItVoteParams) error
	UpsertQuestionsGroup(ctx context.Context, arg UpsertQuestionsGroupParams) (QuestionsGroup, error)
}

var _ Querier = (*Queries)(nil)
