// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"context"
)

type Querier interface {
	AddFibbingItAnswer(ctx context.Context, arg AddFibbingItAnswerParams) (FibbingItAnswer, error)
	AddFibbingItRole(ctx context.Context, arg AddFibbingItRoleParams) (FibbingItPlayerRole, error)
	AddFibbingItRound(ctx context.Context, arg AddFibbingItRoundParams) (FibbingItRound, error)
	AddGameState(ctx context.Context, arg AddGameStateParams) (GameState, error)
	AddPlayer(ctx context.Context, arg AddPlayerParams) (Player, error)
	AddQuestion(ctx context.Context, arg AddQuestionParams) (Question, error)
	AddQuestionsGroup(ctx context.Context, arg AddQuestionsGroupParams) (QuestionsGroup, error)
	AddRoom(ctx context.Context, arg AddRoomParams) (Room, error)
	AddRoomPlayer(ctx context.Context, arg AddRoomPlayerParams) (RoomsPlayer, error)
	GetAllPlayerAnswerIsReady(ctx context.Context, playerID string) ([]GetAllPlayerAnswerIsReadyRow, error)
	GetAllPlayerByRoomCode(ctx context.Context, roomCode string) ([]GetAllPlayerByRoomCodeRow, error)
	GetAllPlayersInRoom(ctx context.Context, playerID string) ([]GetAllPlayersInRoomRow, error)
	GetCurrentQuestionByPlayerID(ctx context.Context, id string) (GetCurrentQuestionByPlayerIDRow, error)
	GetGameStateByPlayerID(ctx context.Context, playerID string) (GameState, error)
	GetLatestRoundByPlayerID(ctx context.Context, playerID string) (GetLatestRoundByPlayerIDRow, error)
	GetPlayerByID(ctx context.Context, id string) (Player, error)
	GetRandomQuestionByRound(ctx context.Context, arg GetRandomQuestionByRoundParams) (Question, error)
	GetRandomQuestionInGroup(ctx context.Context, arg GetRandomQuestionInGroupParams) (GetRandomQuestionInGroupRow, error)
	GetRoomByCode(ctx context.Context, roomCode string) (Room, error)
	GetRoomByPlayerID(ctx context.Context, playerID string) (Room, error)
	GetVotingState(ctx context.Context, roundID string) ([]GetVotingStateRow, error)
	RemovePlayerFromRoom(ctx context.Context, playerID string) (RoomsPlayer, error)
	ToggleAnswerIsReady(ctx context.Context, playerID string) (FibbingItAnswer, error)
	TogglePlayerIsReady(ctx context.Context, id string) (Player, error)
	UpdateAvatar(ctx context.Context, arg UpdateAvatarParams) (Player, error)
	UpdateGameState(ctx context.Context, arg UpdateGameStateParams) (GameState, error)
	UpdateNickname(ctx context.Context, arg UpdateNicknameParams) (Player, error)
	UpdateRoomState(ctx context.Context, arg UpdateRoomStateParams) (Room, error)
	UpsertFibbingItVote(ctx context.Context, arg UpsertFibbingItVoteParams) error
}

var _ Querier = (*Queries)(nil)
