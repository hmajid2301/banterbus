package layouts

import "gitlab.com/hmajid2301/banterbus/internal/views/components"

templ Base(languages map[string]string, environment string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta name="apple-mobile-web-app-title" content="Banter Bus"/>
			<title>Banter Bus</title>
			<link rel="stylesheet" href="/static/css/styles.css"/>
			<link rel="stylesheet" href="https://sets.hugeicons.com/gnrbwn6u4pr.css" crossorigin="anonymous"/>
			<link rel="icon" type="image/png" href="/static/images/favicon-48x48.png" sizes="48x48"/>
			<link rel="icon" type="image/svg+xml" href="/static/images/favicon.svg"/>
			<link rel="shortcut icon" href="/static/images/favicon.ico"/>
			<link rel="apple-touch-icon" sizes="180x180" href="/static/images/apple-touch-icon.png"/>
			<link rel="manifest" href="/static/site.webmanifest"/>
			<script>
				if ("serviceWorker" in navigator) {
					window.addEventListener("load", () => {
						navigator.serviceWorker.register("/static/js/sw.js").then(
							(registration) => {
								console.log("ServiceWorker registration successful with scope: ", registration.scope);
							},
							(err) => {
								console.log("ServiceWorker registration failed: ", err);
							},
						);
					});
				}
			</script>
		</head>
		<body>
			@components.Toast()
			<div
				class="w-full min-h-screen text-lg bg-center bg-no-repeat bg-cover bg-mantle bg-background"
				hx-ext="ws"
				ws-connect="/ws"
			>
				@components.Header(languages)
				<section class="flex flex-col justify-center items-center min-h-screen">
					<div class="py-10 px-20 max-w-3xl rounded-xl bg-surface0">
						<div class="flex flex-col justify-center items-center">
							<div class="flex flex-col items-center space-y-10">
								<h1 class="text-8xl tracking-tighter text-center text-text font-header text-shadow-custom">
									Banter Bus
								</h1>
								<div id="page" class="mt-5 w-full font-main">
									{ children... }
								</div>
							</div>
						</div>
					</div>
				</section>
			</div>
		</body>
		<script src="/static/js/htmx.min.js"></script>
		<script src="/static/js/htmx.ws.js"></script>
		<script src="/static/js/alpine.min.js"></script>
		<script src="https://js.sentry-cdn.com/032c389ec88919d78c2f7b515d85401c.min.js" crossorigin="anonymous"></script>
		@sentryLoad(environment)
		<script defer>
            htmx.on("htmx:wsBeforeMessage", (evt) => {
                try {
                    const {message, type} = JSON.parse(event.detail.message);
                    window.toast(message, type);
                    if (type === "failure") {
                        console.log(message);
                        Sentry.captureException(message, {
                           extra: {
                             context: "User action failed",
                           },
                       });
                    }
                } catch (err) {
                  Sentry.captureException(err, {
                     extra: {
                       context: "Failed to parse or handle message",
                       rawMessage: event.detail.message,
                     },
                  });
                }
            });
        </script>
		if environment == "prod" {
			<script defer data-domain="banterbus.games" src="https://plausible.haseebmajid.dev/js/script.file-downloads.hash.outbound-links.pageview-props.tagged-events.js"></script>
		} else {
			<script defer data-domain="dev.banterbus.games" src="https://plausible.haseebmajid.dev/js/script.file-downloads.hash.outbound-links.pageview-props.tagged-events.js"></script>
		}
		<script>window.plausible = window.plausible || function() { (window.plausible.q = window.plausible.q || []).push(arguments) }</script>
	</html>
}

script sentryLoad(environment string) {
  Sentry.onLoad(function() {
    Sentry.init({
        environment: environment,
    });
  });
}
