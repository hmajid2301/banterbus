package layouts

import "gitlab.com/hmajid2301/banterbus/internal/views/components"

templ Base(languages map[string]string, environment string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<meta name="apple-mobile-web-app-title" content="Banter Bus"/>
			<title>Banter Bus</title>
			<link rel="stylesheet" href="/static/css/styles.css"/>
			<link rel="stylesheet" href="https://sets.hugeicons.com/gnrbwn6u4pr.css" crossorigin="anonymous"/>
			<link rel="icon" type="image/png" href="/static/images/favicon-48x48.png" sizes="48x48"/>
			<link rel="icon" type="image/svg+xml" href="/static/images/favicon.svg"/>
			<link rel="shortcut icon" href="/static/images/favicon.ico"/>
			<link rel="apple-touch-icon" sizes="180x180" href="/static/images/apple-touch-icon.png"/>
			<link rel="manifest" href="/static/site.webmanifest"/>
			<script>
				if ("serviceWorker" in navigator) {
					window.addEventListener("load", () => {
						navigator.serviceWorker.register("/static/js/sw.js").then(
							(registration) => {
								console.log(
									"ServiceWorker registration successful with scope: ",
									registration.scope,
								);
							},
							(err) => {
								console.log("ServiceWorker registration failed: ", err);
							},
						);
					});
				}
			</script>
		</head>
		<body data-environment={ environment }>
			@components.Toast()
			<div
				class="w-full min-h-screen text-lg bg-center bg-no-repeat bg-cover bg-mantle bg-background"
				hx-ext="ws"
				ws-connect="/ws"
			>
				@components.Header(languages)
				<section class="flex flex-col justify-center items-center min-h-screen">
					<div class="py-10 px-4 max-w-3xl rounded-xl sm:px-8 md:px-20 bg-surface0">
						<div class="flex flex-col justify-center items-center">
							<div class="flex flex-col items-center space-y-10">
								<h1 class="text-4xl tracking-tighter text-center sm:text-6xl md:text-8xl text-text font-header text-shadow-custom">
									Banter Bus
								</h1>
								<div id="page" class="mt-5 w-full font-main">
									{ children... }
								</div>
							</div>
						</div>
					</div>
				</section>
			</div>
		</body>
		<script src="/static/js/htmx.min.js"></script>
		<script src="/static/js/htmx.ws.js"></script>
		<script src="/static/js/alpine.min.js" defer></script>
		<script src="/static/js/toast.js"></script>
		<script>
			htmx.on("htmx:wsBeforeMessage", (evt) => {
				try {
					const { message, type } = JSON.parse(evt.detail.message);
					window.toast(message, type);
					if (type === "failure") {
						console.log(message);
					}
				} catch (err) {
					console.error(
						"Failed to parse or handle message:",
						err,
						evt.detail.message,
					);
				}
			});
		</script>
		if environment == "prod" {
			<script defer data-domain="banterbus.games" src="https://plausible.haseebmajid.dev/js/script.file-downloads.hash.outbound-links.pageview-props.tagged-events.js"></script>
		} else {
			<script defer data-domain="dev.banterbus.games" src="https://plausible.haseebmajid.dev/js/script.file-downloads.hash.outbound-links.pageview-props.tagged-events.js"></script>
		}
		<script>
			window.plausible =
				window.plausible ||
				function () {
					(window.plausible.q = window.plausible.q || []).push(arguments);
				};
		</script>
		<script>
			!(function (t, e) {
				var o, n, p, r;
				e.__SV ||
					(window.posthog && window.posthog.__loaded) ||
					((window.posthog = e),
					(e._i = []),
					(e.init = function (i, s, a) {
						function g(t, e) {
							var o = e.split(".");
							(2 == o.length && ((t = t[o[0]]), (e = o[1])),
								(t[e] = function () {
									t.push([e].concat(Array.prototype.slice.call(arguments, 0)));
								}));
						}
						(((p = t.createElement("script")).type = "text/javascript"),
							(p.crossOrigin = "anonymous"),
							(p.async = !0),
							(p.src =
								s.api_host.replace(".i.posthog.com", "-assets.i.posthog.com") +
								"/static/array.js"),
							(r = t.getElementsByTagName("script")[0]).parentNode.insertBefore(
								p,
								r,
							));
						var u = e;
						for (
							void 0 !== a ? (u = e[a] = []) : (a = "posthog"),
								u.people = u.people || [],
								u.toString = function (t) {
									var e = "posthog";
									return (
										"posthog" !== a && (e += "." + a),
										t || (e += " (stub)"),
										e
									);
								},
								u.people.toString = function () {
									return u.toString(1) + ".people (stub)";
								},
								o =
									"init Ce js Ls Te Fs Ds capture Ye calculateEventProperties zs register register_once register_for_session unregister unregister_for_session Ws getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey displaySurvey canRenderSurvey canRenderSurveyAsync identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty Bs Us createPersonProfile Hs Ms Gs opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing get_explicit_consent_status is_capturing clear_opt_in_out_capturing Ns debug L qs getPageViewId captureTraceFeedback captureTraceMetric".split(
										" ",
									),
								n = 0;
							n < o.length;
							n++
						)
							g(u, o[n]);
						e._i.push([i, s, a]);
					}),
					(e.__SV = 1));
			})(document, window.posthog || []);
			posthog.init("phc_5olBGdkEj5ar0ZEqwwxzRneyYJBsXxCUIRmVWPTHbEh", {
				api_host: "https://eu.i.posthog.com",
				defaults: "2025-05-24",
				person_profiles: "identified_only",
			});
		</script>
	</html>
}
