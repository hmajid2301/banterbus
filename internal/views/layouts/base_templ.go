// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.937
package layouts

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import (
	"github.com/a-h/templ"
	templruntime "github.com/a-h/templ/runtime"

	"gitlab.com/hmajid2301/banterbus/internal/views/components"
)

func Base(languages map[string]string, environment string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"apple-mobile-web-app-title\" content=\"Banter Bus\"><title>Banter Bus</title><link rel=\"stylesheet\" href=\"/static/css/styles.css\"><link rel=\"stylesheet\" href=\"https://sets.hugeicons.com/gnrbwn6u4pr.css\" crossorigin=\"anonymous\"><link rel=\"icon\" type=\"image/png\" href=\"/static/images/favicon-48x48.png\" sizes=\"48x48\"><link rel=\"icon\" type=\"image/svg+xml\" href=\"/static/images/favicon.svg\"><link rel=\"shortcut icon\" href=\"/static/images/favicon.ico\"><link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/static/images/apple-touch-icon.png\"><link rel=\"manifest\" href=\"/static/site.webmanifest\"><script>\n\t\t\t\tif (\"serviceWorker\" in navigator) {\n\t\t\t\t\twindow.addEventListener(\"load\", () => {\n\t\t\t\t\t\tnavigator.serviceWorker.register(\"/static/js/sw.js\").then(\n\t\t\t\t\t\t\t(registration) => {\n\t\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\t\"ServiceWorker registration successful with scope: \",\n\t\t\t\t\t\t\t\t\tregistration.scope,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t(err) => {\n\t\t\t\t\t\t\t\tconsole.log(\"ServiceWorker registration failed: \", err);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t</script></head><body data-environment=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(environment)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/views/layouts/base.templ`, Line: 38, Col: 38}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Toast().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if environment != "production" {
			templ_7745c5c3_Err = testNameInput().Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"w-full min-h-screen text-lg bg-center bg-no-repeat bg-cover bg-mantle bg-background\" hx-ext=\"ws\" ws-connect=\"/ws\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Header(languages).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<section class=\"flex flex-col justify-center items-center min-h-screen\"><div class=\"py-10 px-4 max-w-3xl rounded-xl sm:px-8 md:px-20 bg-surface0\"><div class=\"flex flex-col justify-center items-center\"><div class=\"flex flex-col items-center space-y-10\"><h1 class=\"text-4xl tracking-tighter text-center sm:text-6xl md:text-8xl text-text font-header text-shadow-custom\">Banter Bus</h1><div id=\"page\" class=\"mt-5 w-full font-main\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div></div></div></div></section></div></body><script src=\"/static/js/htmx.min.js\"></script><script src=\"/static/js/htmx.ws.js\"></script><script src=\"/static/js/alpine.min.js\" defer></script><script src=\"/static/js/toast.js\"></script><script>\n\t\t\thtmx.on(\"htmx:wsConfigSend\", (evt) => {\n\t\t\t\tconst testNameInput = document.querySelector('input[name=\"test_name\"]');\n\t\t\t\tif (testNameInput && testNameInput.value) {\n\t\t\t\t\tevt.detail.headers = evt.detail.headers || {};\n\t\t\t\t\tevt.detail.headers[\"X-Test-Name\"] = testNameInput.value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thtmx.on(\"htmx:wsBeforeMessage\", (evt) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { message, type } = JSON.parse(event.detail.message);\n\t\t\t\t\twindow.toast(message, type);\n\t\t\t\t\tif (type === \"failure\") {\n\t\t\t\t\t\tconsole.log(message);\n\t\t\t\t\t\tSentry.captureException(message, {\n\t\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\t\tcontext: \"User action failed\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\tSentry.captureException(err, {\n\t\t\t\t\t\textra: {\n\t\t\t\t\t\t\tcontext: \"Failed to parse or handle message\",\n\t\t\t\t\t\t\trawMessage: event.detail.message,\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if environment == "prod" {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<script defer data-domain=\"banterbus.games\" src=\"https://plausible.haseebmajid.dev/js/script.file-downloads.hash.outbound-links.pageview-props.tagged-events.js\"></script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		} else {
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "<script defer data-domain=\"dev.banterbus.games\" src=\"https://plausible.haseebmajid.dev/js/script.file-downloads.hash.outbound-links.pageview-props.tagged-events.js\"></script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "<script>\n\t\t\twindow.plausible =\n\t\t\t\twindow.plausible ||\n\t\t\t\tfunction () {\n\t\t\t\t\t(window.plausible.q = window.plausible.q || []).push(arguments);\n\t\t\t\t};\n\t\t</script></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func testNameInput() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "<div id=\"test-name-input\" class=\"fixed right-0 top-12 z-50 p-2 font-mono text-xs text-white bg-blue-900 bg-opacity-80 rounded-bl\"><div class=\"flex flex-col space-y-2\"><label for=\"test-name-field\" class=\"text-xs text-gray-200\">Test Name:</label> <input type=\"text\" name=\"test_name\" placeholder=\"Enter test name...\" class=\"py-1 px-2 text-xs text-black bg-white rounded border\"></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func sentryLoad(environment string) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_sentryLoad_6d85`,
		Function: `function __templ_sentryLoad_6d85(environment){Sentry.onLoad(function() {
    Sentry.init({
        environment: environment,
        tracesSampleRate: 1.0,
        integrations: [
            new Sentry.BrowserTracing({
                tracingOrigins: [window.location.hostname, /^\//],
            }),
        ],
    });
  });
}`,
		Call:       templ.SafeScript(`__templ_sentryLoad_6d85`, environment),
		CallInline: templ.SafeScriptInline(`__templ_sentryLoad_6d85`, environment),
	}
}

var _ = templruntime.GeneratedTemplate
