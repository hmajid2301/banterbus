package sections

import (
	"github.com/invopop/ctxi18n/i18n"
	"gitlab.com/hmajid2301/banterbus/internal/service"
	"gitlab.com/hmajid2301/banterbus/internal/views/components"
	"strconv"
)

templ Voting(state service.VotingState, currentPlayer service.PlayerWithVoting) {
	<div hx-swap-oob="innerHTML:#page">
		<div>
			<div class="flex flex-col justify-center items-center space-y-4 sm:space-y-6 text-text2">
				<div class="text-lg sm:text-xl">{ strconv.Itoa(state.Round) } / 3</div>
				<div class="text-center">
					@components.CircularTimer(components.CircularTimerProps{
						InitialSeconds: int(state.Deadline.Seconds()),
						Size:           "w-12 h-12 sm:w-14 sm:h-14 md:w-16 md:h-16",
					})
				</div>
				<div class="text-lg text-center sm:text-xl md:text-2xl">{ state.Question }</div>
				<div class="grid grid-cols-1 gap-4 w-full sm:grid-cols-2 sm:gap-8 md:gap-12 lg:gap-16">
					// INFO: Render the current player first
					for _, player := range state.Players {
						if currentPlayer.ID.String() == player.ID.String() {
							<div class="flex flex-col items-center">
								{ player.Nickname }
								<div class="w-24 h-24 rounded-full border-2 border-white sm:w-20 sm:h-20 bg-overlay0">
									<img src={ player.Avatar } alt="avatar" class="object-cover w-full h-full rounded-full"/>
								</div>
								Answer { player.Answer }
								<p class="text-center">{ i18n.T(ctx, "voting.votes") } { strconv.Itoa(player.Votes) }</p>
							</div>
						}
					}
					// INFO: Render the rest of the players that you can vote for
					for _, player := range state.Players {
						if currentPlayer.ID.String() != player.ID.String() {
							<div class="flex flex-col items-center p-4 rounded-lg border sm:p-6 bg-overlay0 border-text2">
								<form id="vote_for_player" hx-vals='{"message_type": "submit_vote" }' ws-send>
									<button type="submit" hx-include="this" class="flex flex-col items-center cursor-pointer" aria-label={ i18n.T(ctx, "voting.submit_vote") }>
										{ player.Nickname }
										<div class="w-24 h-24 rounded-full sm:w-20 sm:h-20 bg-surface1">
											<img src={ player.Avatar } alt="avatar" class="object-cover w-full h-full rounded-full"/>
										</div>
										<p>
											{ i18n.T(ctx, "voting.answer_label") }: { player.Answer }
										</p>
										<p class="text-center">{ i18n.T(ctx, "voting.votes") }: { strconv.Itoa(player.Votes) }</p>
										<input class="hidden" name="voted_player_nickname" value={ player.Nickname }/>
									</button>
								</form>
							</div>
						}
					}
				</div>
				<form id="toggle_ready_form" hx-vals='{"message_type": "toggle_voting_is_ready" }' ws-send class="w-full">
					if currentPlayer.IsReady {
						@components.Button(components.ButtonProps{TextColor: "text-black", BackgroundColor: "bg-text2", Label: i18n.T(ctx, "common.ready_button")}, templ.Attributes{"type": "submit", "hx-include": "this"}) {
							{ i18n.T(ctx, "common.ready_button") }
						}
					} else {
						@components.Button(components.ButtonProps{Label: i18n.T(ctx, "common.not_ready_button")}, templ.Attributes{"type": "submit", "hx-include": "this"}) {
							{ i18n.T(ctx, "common.not_ready_button") }
						}
					}
				</form>
			</div>
		</div>
	</div>
}
