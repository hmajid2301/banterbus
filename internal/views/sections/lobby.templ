package sections

import (
	"gitlab.com/hmajid2301/banterbus/internal/entities"
	"gitlab.com/hmajid2301/banterbus/internal/views/icons"
)

templ Lobby(code string, players []entities.LobbyPlayer, currentPlayer entities.LobbyPlayer) {
	<div hx-swap-oob="innerHTML:#page">
		<div class="relative mb-5">
			<label for="room_code" class="block mb-2 font-medium text-text2">Room Code</label>
			<input type="text" disabled name="room_code" value={ code } class="py-3 px-5 w-full rounded-xl border-1 bg-overlay0 placeholder-surface0 border-text2"/>
			<button class="inline-flex absolute top-1/2 justify-center items-center p-2 rounded-lg text-text2 end-2 hover:text-surface0" x-clipboard.raw={ code }>
				@icons.Clipboard("")
			</button>
		</div>
		<div class="grid grid-rows-2 grid-flow-col gap-4 text-text2">
			for _, player := range players {
				<div class="flex flex-col">
					<div class="flex flex-row justify-between items-center p-2 space-x-2 w-full rounded-lg bg-surface2">
						<div class="relative w-20 h-20 rounded-full border-2 border-white bg-overlay0">
							<img src={ player.Avatar } alt="avatar" class="w-full h-full rounded-full"/>
							if currentPlayer == player {
								<form id="update_avatar_form" hx-vals='{"message_type": "generate_new_avatar" }' ws-send>
									<button class="absolute right-0 bottom-0 p-1 text-black bg-white rounded-full hover:bg-surface2 hover:text-text2" aria-label="Update Avatar">
										@icons.Redo("")
									</button>
								</form>
							}
						</div>
						if currentPlayer == player {
							<form id="update_nickname_form" hx-vals='{"message_type": "update_player_nickname" }' ws-send>
								<div class="flex flex-row items-center space-x-2">
									<div class="relative">
										<input type="text" name="player_nickname" value={ player.Nickname } class="py-3 px-5 w-full rounded-xl border-1 bg-overlay0 placeholder-surface0 border-text2"/>
										<button class="inline-flex absolute top-1/2 justify-center items-center p-2 rounded-lg -translate-y-5 text-text2 end-2" aria-label="Update Nickname">
											@icons.EditText("")
										</button>
									</div>
								</div>
							</form>
						} else {
							<p>{ player.Nickname }</p>
						}
						if player.IsHost && currentPlayer != player {
							<form id="kick_player" hx-vals='{"message_type": "kick_player" }' ws-send>
								<input class="hidden" name="room_code" value={ code }/>
								<input class="hidden" name="player_nickname_to_kick" value={ player.Nickname }/>
								<button>Kick Player</button>
							</form>
						}
						if currentPlayer == player {
							<button>
								if player.IsReady {
									@icons.SquareCheckmark("")
								} else {
									@icons.SquareCross("")
								}
							</button>
						}
					</div>
				</div>
			}
			<div class="flex flex-row items-center space-x-2 w-full">
				<form id="toggle_ready_form" hx-vals='{"message_type": "toggle_player_is_ready" }' ws-send class="w-full">
					if currentPlayer.IsReady {
						<button class="flex flex-row justify-center items-center p-3 space-x-2 w-full text-3xl text-black rounded-lg rounded-b-lg font-button shadow-custom-border fill-transparent bg-text2">
							Ready
						</button>
					} else {
						<button class="flex flex-row justify-center items-center p-3 space-x-2 w-full text-3xl rounded-lg rounded-b-lg font-button shadow-custom-border fill-transparent bg-surface2 text-text2">
							Not Ready
						</button>
					}
				</form>
				if currentPlayer.IsHost && allPlayersReady(players) {
					<form id="start_game_form" hx-vals='{"message_type": "start_game" }' ws-send class="w-full">
						<input class="hidden" name="room_code" value={ code }/>
						<button class="flex flex-row justify-center items-center p-3 space-x-2 w-full text-3xl rounded-lg rounded-b-lg font-button shadow-custom-border fill-transparent bg-surface2 text-text2">
							Start Game
						</button>
					</form>
				}
			</div>
		</div>
	</div>
}

func allPlayersReady(players []entities.LobbyPlayer) bool {
	for _, player := range players {
		if !player.IsReady {
			return false
		}
	}
	return true
}
